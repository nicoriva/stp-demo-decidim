{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/* eslint-disable require-jsdoc */\n/**\n * This component allows for an element's text value to be updated with the value\n * of an input whenever this input's value is changed.\n *\n * @param {object} options\n *\n * Available options:\n * {string} `inputSelector`:  The query selector to locate the input element\n * {string} `targetSelector`: The query selector to locate the target element\n * {number} `maxLength`: The maximum characters from the input value to be displayed in the target\n * {string} `omission`: The string used to shorten the value to the given maxLength (e.g. \"...\")\n * {string} `placeholder`: The string to be displayed in the target element when the input has no value\n */\nvar LiveTextUpdateComponent = /*#__PURE__*/function () {\n  function LiveTextUpdateComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, LiveTextUpdateComponent);\n    this.inputSelector = options.inputSelector;\n    this.targetSelector = options.targetSelector;\n    this.maxLength = options.maxLength;\n    this.omission = options.omission;\n    this.placeholder = options.placeholder;\n    this._bindEvent();\n    this._run();\n  }\n  _createClass(LiveTextUpdateComponent, [{\n    key: \"_run\",\n    value: function _run() {\n      var $input = $(this.inputSelector);\n      var $target = $(this.targetSelector);\n      var text = $input.val() || this.placeholder;\n\n      // truncate string\n      if (text.length > this.maxLength) {\n        text = text.substring(0, this.maxLength - this.omission.length) + this.omission;\n      }\n      $target.text(text);\n    }\n  }, {\n    key: \"_bindEvent\",\n    value: function _bindEvent() {\n      var $input = $(this.inputSelector);\n      $input.on(\"change\", this._run.bind(this));\n    }\n  }]);\n  return LiveTextUpdateComponent;\n}();\nexport default function createLiveTextUpdateComponent(options) {\n  return new LiveTextUpdateComponent(options);\n}","map":{"version":3,"names":["LiveTextUpdateComponent","options","arguments","length","undefined","_classCallCheck","inputSelector","targetSelector","maxLength","omission","placeholder","_bindEvent","_run","_createClass","key","value","$input","$","$target","text","val","substring","on","bind","createLiveTextUpdateComponent"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-forms-0.27.3/app/packs/src/decidim/forms/admin/live_text_update.component.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n/**\n * This component allows for an element's text value to be updated with the value\n * of an input whenever this input's value is changed.\n *\n * @param {object} options\n *\n * Available options:\n * {string} `inputSelector`:  The query selector to locate the input element\n * {string} `targetSelector`: The query selector to locate the target element\n * {number} `maxLength`: The maximum characters from the input value to be displayed in the target\n * {string} `omission`: The string used to shorten the value to the given maxLength (e.g. \"...\")\n * {string} `placeholder`: The string to be displayed in the target element when the input has no value\n */\nclass LiveTextUpdateComponent {\n  constructor(options = {}) {\n    this.inputSelector = options.inputSelector;\n    this.targetSelector = options.targetSelector;\n    this.maxLength = options.maxLength;\n    this.omission = options.omission;\n    this.placeholder = options.placeholder;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $input = $(this.inputSelector);\n    const $target = $(this.targetSelector);\n\n    let text = $input.val() || this.placeholder;\n\n    // truncate string\n    if (text.length > this.maxLength) {\n      text = text.substring(0, this.maxLength - this.omission.length) + this.omission;\n    }\n\n    $target.text(text);\n  }\n\n  _bindEvent() {\n    const $input = $(this.inputSelector);\n    $input.on(\"change\", this._run.bind(this));\n  }\n}\n\nexport default function createLiveTextUpdateComponent(options) {\n  return new LiveTextUpdateComponent(options);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMA,uBAAuB;EAC3B,SAAAA,wBAAA,EAA0B;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAAG,eAAA,OAAAL,uBAAA;IACtB,IAAI,CAACM,aAAa,GAAGL,OAAO,CAACK,aAAa;IAC1C,IAAI,CAACC,cAAc,GAAGN,OAAO,CAACM,cAAc;IAC5C,IAAI,CAACC,SAAS,GAAGP,OAAO,CAACO,SAAS;IAClC,IAAI,CAACC,QAAQ,GAAGR,OAAO,CAACQ,QAAQ;IAChC,IAAI,CAACC,WAAW,GAAGT,OAAO,CAACS,WAAW;IACtC,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,IAAI,CAAC,CAAC;EACb;EAACC,YAAA,CAAAb,uBAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAH,KAAA,EAAO;MACL,IAAMI,MAAM,GAAGC,CAAC,CAAC,IAAI,CAACX,aAAa,CAAC;MACpC,IAAMY,OAAO,GAAGD,CAAC,CAAC,IAAI,CAACV,cAAc,CAAC;MAEtC,IAAIY,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,CAAC,IAAI,IAAI,CAACV,WAAW;;MAE3C;MACA,IAAIS,IAAI,CAAChB,MAAM,GAAG,IAAI,CAACK,SAAS,EAAE;QAChCW,IAAI,GAAGA,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,IAAI,CAACb,SAAS,GAAG,IAAI,CAACC,QAAQ,CAACN,MAAM,CAAC,GAAG,IAAI,CAACM,QAAQ;MACjF;MAEAS,OAAO,CAACC,IAAI,CAACA,IAAI,CAAC;IACpB;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAJ,WAAA,EAAa;MACX,IAAMK,MAAM,GAAGC,CAAC,CAAC,IAAI,CAACX,aAAa,CAAC;MACpCU,MAAM,CAACM,EAAE,CAAC,QAAQ,EAAE,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C;EAAC;EAAA,OAAAvB,uBAAA;AAAA;AAGH,eAAe,SAASwB,6BAA6BA,CAACvB,OAAO,EAAE;EAC7D,OAAO,IAAID,uBAAuB,CAACC,OAAO,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}