{"ast":null,"code":"/* eslint-disable require-jsdoc */\n\nexport default function updateExternalDomainLinks($target) {\n  var whitelist = window.Decidim.config.get(\"external_domain_whitelist\");\n  if (window.location.pathname === \"/link\") {\n    return;\n  }\n  $(\"a\", $target).filter(function (_i, link) {\n    var $link = $(link);\n    if (!$link[0].hasAttribute(\"href\") || $link.parents(\".editor-container\").length > 0) {\n      return false;\n    }\n    var parts = $link.attr(\"href\").match(/^(([a-z]+):)?\\/\\/([^/:]+)(:[0-9]*)?(\\/.*)?$/) || null;\n    if (!parts) {\n      return false;\n    }\n    var domain = parts[3].replace(/^www\\./, \"\");\n    if (whitelist.includes(domain)) {\n      return false;\n    }\n    return true;\n  }).each(function (_n, link) {\n    var $link = $(link);\n    var externalHref = \"/link?external_url=\".concat(encodeURIComponent($link.attr(\"href\")));\n    $link.attr(\"href\", externalHref);\n    $link.attr(\"data-remote\", true);\n  });\n}","map":{"version":3,"names":["updateExternalDomainLinks","$target","whitelist","window","Decidim","config","get","location","pathname","$","filter","_i","link","$link","hasAttribute","parents","length","parts","attr","match","domain","replace","includes","each","_n","externalHref","concat","encodeURIComponent"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/external_domain_warning.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nexport default function updateExternalDomainLinks($target) {\n  const whitelist = window.Decidim.config.get(\"external_domain_whitelist\")\n\n  if (window.location.pathname === \"/link\") {\n    return;\n  }\n\n  $(\"a\", $target).filter((_i, link) => {\n    const $link = $(link);\n    if (!$link[0].hasAttribute(\"href\") || $link.parents(\".editor-container\").length > 0) {\n      return false;\n    }\n\n    const parts = $link.attr(\"href\").match(/^(([a-z]+):)?\\/\\/([^/:]+)(:[0-9]*)?(\\/.*)?$/) || null;\n    if (!parts) {\n      return false;\n    }\n\n    const domain = parts[3].replace(/^www\\./, \"\")\n    if (whitelist.includes(domain)) {\n      return false;\n    }\n\n    return true;\n  }).each((_n, link) => {\n    const $link = $(link);\n    const externalHref = `/link?external_url=${encodeURIComponent($link.attr(\"href\"))}`;\n    $link.attr(\"href\", externalHref)\n    $link.attr(\"data-remote\", true)\n  });\n}\n"],"mappings":"AAAA;;AAEA,eAAe,SAASA,yBAAyBA,CAACC,OAAO,EAAE;EACzD,IAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAExE,IAAIH,MAAM,CAACI,QAAQ,CAACC,QAAQ,KAAK,OAAO,EAAE;IACxC;EACF;EAEAC,CAAC,CAAC,GAAG,EAAER,OAAO,CAAC,CAACS,MAAM,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAK;IACnC,IAAMC,KAAK,GAAGJ,CAAC,CAACG,IAAI,CAAC;IACrB,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,YAAY,CAAC,MAAM,CAAC,IAAID,KAAK,CAACE,OAAO,CAAC,mBAAmB,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACnF,OAAO,KAAK;IACd;IAEA,IAAMC,KAAK,GAAGJ,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,6CAA6C,CAAC,IAAI,IAAI;IAC7F,IAAI,CAACF,KAAK,EAAE;MACV,OAAO,KAAK;IACd;IAEA,IAAMG,MAAM,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC7C,IAAInB,SAAS,CAACoB,QAAQ,CAACF,MAAM,CAAC,EAAE;MAC9B,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,CAACG,IAAI,CAAC,UAACC,EAAE,EAAEZ,IAAI,EAAK;IACpB,IAAMC,KAAK,GAAGJ,CAAC,CAACG,IAAI,CAAC;IACrB,IAAMa,YAAY,yBAAAC,MAAA,CAAyBC,kBAAkB,CAACd,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAE;IACnFL,KAAK,CAACK,IAAI,CAAC,MAAM,EAAEO,YAAY,CAAC;IAChCZ,KAAK,CAACK,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;EACjC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}