{"ast":null,"code":"/**\n// Function adds feature to datalist that you can have different id and label.\n// Used with datalist_select_helper.rb#datalist_select\n * @param {HTMLElement} target - dataselect wrapper\n * @param {Function} callback - the function to be executed after a successful selection.\n * @returns {Void} - Returns nothing.\n */\n\nexport var datalistSelect = function datalistSelect(target, callback) {\n  if (!target) {\n    return;\n  }\n  var input = target.querySelector(\"input[type='hidden'\");\n  var textInput = target.querySelector(\"input[type='text']\");\n  var items = target.querySelector(\"datalist\").children;\n  var selectValue = function selectValue(selected) {\n    for (var idx = 0; idx < items.length; idx += 1) {\n      if (items[idx].innerHTML === selected) {\n        var id = items[idx].dataset.value;\n        input.value = id;\n        if (callback) {\n          return callback(id);\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n  textInput.addEventListener(\"input\", function () {\n    var selected = textInput.value;\n    selectValue(selected);\n  });\n};","map":{"version":3,"names":["datalistSelect","target","callback","input","querySelector","textInput","items","children","selectValue","selected","idx","length","innerHTML","id","dataset","value","addEventListener"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/datalist_select.js"],"sourcesContent":["/**\n// Function adds feature to datalist that you can have different id and label.\n// Used with datalist_select_helper.rb#datalist_select\n * @param {HTMLElement} target - dataselect wrapper\n * @param {Function} callback - the function to be executed after a successful selection.\n * @returns {Void} - Returns nothing.\n */\n\nexport const datalistSelect = (target, callback) => {\n  if (!target) {\n    return;\n  }\n\n  const input = target.querySelector(\"input[type='hidden'\");\n  const textInput = target.querySelector(\"input[type='text']\");\n  const items = target.querySelector(\"datalist\").children;\n\n  const selectValue = (selected) => {\n    for (let idx = 0; idx < items.length; idx += 1) {\n      if (items[idx].innerHTML === selected) {\n        const id = items[idx].dataset.value;\n        input.value = id;\n        if (callback) {\n          return callback(id);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  textInput.addEventListener(\"input\", () => {\n    const selected = textInput.value;\n    selectValue(selected);\n  })\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAEC,QAAQ,EAAK;EAClD,IAAI,CAACD,MAAM,EAAE;IACX;EACF;EAEA,IAAME,KAAK,GAAGF,MAAM,CAACG,aAAa,CAAC,qBAAqB,CAAC;EACzD,IAAMC,SAAS,GAAGJ,MAAM,CAACG,aAAa,CAAC,oBAAoB,CAAC;EAC5D,IAAME,KAAK,GAAGL,MAAM,CAACG,aAAa,CAAC,UAAU,CAAC,CAACG,QAAQ;EAEvD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,QAAQ,EAAK;IAChC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,KAAK,CAACK,MAAM,EAAED,GAAG,IAAI,CAAC,EAAE;MAC9C,IAAIJ,KAAK,CAACI,GAAG,CAAC,CAACE,SAAS,KAAKH,QAAQ,EAAE;QACrC,IAAMI,EAAE,GAAGP,KAAK,CAACI,GAAG,CAAC,CAACI,OAAO,CAACC,KAAK;QACnCZ,KAAK,CAACY,KAAK,GAAGF,EAAE;QAChB,IAAIX,QAAQ,EAAE;UACZ,OAAOA,QAAQ,CAACW,EAAE,CAAC;QACrB;QACA,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC;EAEDR,SAAS,CAACW,gBAAgB,CAAC,OAAO,EAAE,YAAM;IACxC,IAAMP,QAAQ,GAAGJ,SAAS,CAACU,KAAK;IAChCP,WAAW,CAACC,QAAQ,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}