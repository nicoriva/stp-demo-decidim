{"ast":null,"code":"/* eslint-disable require-jsdoc */\n\n// This will apply some fixes for the Foundation dropdown menu element\n// according to W3C instructions at:\n// https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\n//\n// NOTE:\n// This needs to run AFTER Foundation has been initialized because those\n// initializers will affect the drop down menu elements.\nexport default function fixDropdownMenus() {\n  $(\"[data-dropdown-menu]\").each(function (_i, element) {\n    // This will break navigation on macOS VoiceOver app since it will let the\n    // user to focus on the li element instead of the <a> element where we\n    // actually need the focus to be in.\n    $(\"li.is-dropdown-submenu-parent\", element).removeAttr(\"aria-haspopup\").removeAttr(\"aria-label\");\n    $(\"li.is-dropdown-submenu-parent > a:first\", element).removeAttr(\"aria-label\");\n    // Foundation marks the wrong role for the submenu elements\n    $(\"ul.is-dropdown-submenu\", element).attr(\"role\", \"menu\");\n  });\n}\n\n// Ensure the first element is always focused when a dropdown is opened as\n// this would not always happen when using a screen reader. If this is not\n// done, the screen reader will stay quiet when the menu opens which can lead\n// to the blind user not understanding the menu has opened.\n$(function () {\n  $(\"[data-dropdown-menu]\").on(\"show.zf.dropdownMenu\", function (_i, element) {\n    $(\"li:first > a\", element).focus();\n  });\n});","map":{"version":3,"names":["fixDropdownMenus","$","each","_i","element","removeAttr","attr","on","focus"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/dropdowns_menus.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n// This will apply some fixes for the Foundation dropdown menu element\n// according to W3C instructions at:\n// https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\n//\n// NOTE:\n// This needs to run AFTER Foundation has been initialized because those\n// initializers will affect the drop down menu elements.\nexport default function fixDropdownMenus() {\n  $(\"[data-dropdown-menu]\").each((_i, element) => {\n    // This will break navigation on macOS VoiceOver app since it will let the\n    // user to focus on the li element instead of the <a> element where we\n    // actually need the focus to be in.\n    $(\"li.is-dropdown-submenu-parent\", element).removeAttr(\"aria-haspopup\").removeAttr(\"aria-label\");\n    $(\"li.is-dropdown-submenu-parent > a:first\", element).removeAttr(\"aria-label\");\n    // Foundation marks the wrong role for the submenu elements\n    $(\"ul.is-dropdown-submenu\", element).attr(\"role\", \"menu\");\n  })\n}\n\n// Ensure the first element is always focused when a dropdown is opened as\n// this would not always happen when using a screen reader. If this is not\n// done, the screen reader will stay quiet when the menu opens which can lead\n// to the blind user not understanding the menu has opened.\n$(() => {\n  $(\"[data-dropdown-menu]\").on(\"show.zf.dropdownMenu\", (_i, element) => {\n    $(\"li:first > a\", element).focus();\n  });\n})\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,gBAAgBA,CAAA,EAAG;EACzCC,CAAC,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAAC,UAACC,EAAE,EAAEC,OAAO,EAAK;IAC9C;IACA;IACA;IACAH,CAAC,CAAC,+BAA+B,EAAEG,OAAO,CAAC,CAACC,UAAU,CAAC,eAAe,CAAC,CAACA,UAAU,CAAC,YAAY,CAAC;IAChGJ,CAAC,CAAC,yCAAyC,EAAEG,OAAO,CAAC,CAACC,UAAU,CAAC,YAAY,CAAC;IAC9E;IACAJ,CAAC,CAAC,wBAAwB,EAAEG,OAAO,CAAC,CAACE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;EAC3D,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACAL,CAAC,CAAC,YAAM;EACNA,CAAC,CAAC,sBAAsB,CAAC,CAACM,EAAE,CAAC,sBAAsB,EAAE,UAACJ,EAAE,EAAEC,OAAO,EAAK;IACpEH,CAAC,CAAC,cAAc,EAAEG,OAAO,CAAC,CAACI,KAAK,CAAC,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}