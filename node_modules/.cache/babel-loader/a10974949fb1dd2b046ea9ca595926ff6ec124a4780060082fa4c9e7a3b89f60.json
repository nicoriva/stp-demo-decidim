{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* eslint max-lines: [\"error\", 350] */\n\n/**\n * Quill clipboard utilities\n *\n * Copyright (c) 2017, Slab\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n * BSD 3-Clause \"New\" or \"Revised\" License\n *\n * Extends the original version from https://github.com/quilljs/quill\n * Relevant parts converted from TypeScript to JavaScript\n */\n\nimport CodeBlock from \"quill/formats/code\";\nimport { matchNewline, matchBreak, deltaEndsWith, traverse } from \"src/decidim/editor/clipboard_utilities\";\nvar Delta = Quill[\"import\"](\"delta\");\nvar Clipboard = Quill[\"import\"](\"modules/clipboard\");\n\n/**\n * Pasting bold text is broken in Quill as described at:\n * https://github.com/quilljs/quill/issues/306\n *\n * The reason is that the `<strong>` nodes are not recognized as bold types.\n * This override fixes the issue by introducing parts of the newer Quill code\n * at GitHub and defining the `<strong>` tags as bold tags.\n */\nvar ClipboardOverride = /*#__PURE__*/function (_Clipboard) {\n  _inherits(ClipboardOverride, _Clipboard);\n  var _super = _createSuper(ClipboardOverride);\n  function ClipboardOverride(quill, options) {\n    var _this;\n    _classCallCheck(this, ClipboardOverride);\n    _this = _super.call(this, quill, options);\n    _this.overrideMatcher(\"b\", \"b, strong\");\n    _this.overrideMatcher(\"br\", \"br\", matchBreak);\n\n    // Change the matchNewLine matchers to the newer version\n    _this.matchers[1][1] = matchNewline;\n    _this.matchers[3][1] = matchNewline;\n\n    // Remove `matchSpacing` as that is also removed in the newer versions.\n    _this.removeMatcher(Node.ELEMENT_NODE, \"matchSpacing\");\n    return _this;\n  }\n  _createClass(ClipboardOverride, [{\n    key: \"overrideMatcher\",\n    value: function overrideMatcher(originalSelector, newSelector) {\n      var newMatcher = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var idx = this.matchers.findIndex(function (item) {\n        return item[0] === originalSelector;\n      });\n      if (idx >= 0) {\n        this.matchers[idx][0] = newSelector;\n        if (newMatcher) {\n          this.matchers[idx][1] = newMatcher;\n        }\n      }\n    }\n  }, {\n    key: \"removeMatcher\",\n    value: function removeMatcher(selector, matcherName) {\n      var idx = this.matchers.findIndex(function (item) {\n        return item[0] === selector && item[1].name === matcherName;\n      });\n      if (idx >= 0) {\n        this.matchers.splice(idx, 1);\n      }\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(ev) {\n      if (ev.defaultPrevented || !this.quill.isEnabled()) {\n        return;\n      }\n      ev.preventDefault();\n      var range = this.quill.getSelection(true);\n      if (range === null) {\n        return;\n      }\n      var html = ev.clipboardData.getData(\"text/html\");\n      var text = ev.clipboardData.getData(\"text/plain\");\n      var files = Array.from(ev.clipboardData.files || []);\n      if (!html && files.length > 0) {\n        if (typeof this.quill.uploader !== \"undefined\") {\n          this.quill.uploader.upload(range, files);\n        }\n        return;\n      }\n      if (html && files.length > 0) {\n        var doc = new DOMParser().parseFromString(html, \"text/html\");\n        if (doc.body.childElementCount === 1 && doc.body.firstElementChild.tagName === \"IMG\") {\n          if (typeof this.quill.uploader !== \"undefined\") {\n            this.quill.uploader.upload(range, files);\n          }\n          return;\n        }\n      }\n      this.onPasteRange(range, {\n        html: html,\n        text: text\n      });\n    }\n  }, {\n    key: \"onPasteRange\",\n    value: function onPasteRange(range, _ref) {\n      var text = _ref.text,\n        html = _ref.html;\n      var formats = this.quill.getFormat(range.index);\n      var pastedDelta = this.convertPaste({\n        text: text,\n        html: html\n      }, formats);\n      // debug.log('onPaste\", pastedDelta, { text, html });\n      var delta = new Delta().retain(range.index)[\"delete\"](range.length).concat(pastedDelta);\n      this.quill.updateContents(delta, Quill.sources.USER);\n      // range.length contributes to delta.length()\n      this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\n      this.quill.scrollIntoView();\n    }\n  }, {\n    key: \"convertPaste\",\n    value: function convertPaste(_ref2) {\n      var html = _ref2.html,\n        text = _ref2.text;\n      var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (formats[CodeBlock.blotName]) {\n        return new Delta().insert(text, _defineProperty({}, CodeBlock.blotName, formats[CodeBlock.blotName]));\n      }\n      if (!html) {\n        return new Delta().insert(text || \"\");\n      }\n      var delta = this.convertPasteHTML(html);\n      // Remove trailing newline\n      if (deltaEndsWith(delta, \"\\n\") && (delta.ops[delta.ops.length - 1].attributes === null || formats.table)) {\n        return delta.compose(new Delta().retain(delta.length() - 1)[\"delete\"](1));\n      }\n      return delta;\n    }\n  }, {\n    key: \"convertPasteHTML\",\n    value: function convertPasteHTML(html) {\n      var doc = new DOMParser().parseFromString(html, \"text/html\");\n      var container = doc.body;\n      var nodeMatches = new WeakMap();\n      var _this$prepareMatching = this.prepareMatching(container, nodeMatches),\n        _this$prepareMatching2 = _slicedToArray(_this$prepareMatching, 2),\n        elementMatchers = _this$prepareMatching2[0],\n        textMatchers = _this$prepareMatching2[1];\n      return traverse(this.quill.scroll, container, elementMatchers, textMatchers, nodeMatches);\n    }\n  }]);\n  return ClipboardOverride;\n}(Clipboard); // Disable warning messages from overwritting modules\nexport { ClipboardOverride as default };\nQuill.debug(\"error\");\nQuill.register({\n  \"modules/clipboard\": ClipboardOverride\n}, true);","map":{"version":3,"names":["CodeBlock","matchNewline","matchBreak","deltaEndsWith","traverse","Delta","Quill","Clipboard","ClipboardOverride","_Clipboard","_inherits","_super","_createSuper","quill","options","_this","_classCallCheck","call","overrideMatcher","matchers","removeMatcher","Node","ELEMENT_NODE","_createClass","key","value","originalSelector","newSelector","newMatcher","arguments","length","undefined","idx","findIndex","item","selector","matcherName","name","splice","onPaste","ev","defaultPrevented","isEnabled","preventDefault","range","getSelection","html","clipboardData","getData","text","files","Array","from","uploader","upload","doc","DOMParser","parseFromString","body","childElementCount","firstElementChild","tagName","onPasteRange","_ref","formats","getFormat","index","pastedDelta","convertPaste","delta","retain","concat","updateContents","sources","USER","setSelection","SILENT","scrollIntoView","_ref2","blotName","insert","_defineProperty","convertPasteHTML","ops","attributes","table","compose","container","nodeMatches","WeakMap","_this$prepareMatching","prepareMatching","_this$prepareMatching2","_slicedToArray","elementMatchers","textMatchers","scroll","default","debug","register"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/editor/clipboard_override.js"],"sourcesContent":["/* eslint max-lines: [\"error\", 350] */\n\n/**\n * Quill clipboard utilities\n *\n * Copyright (c) 2017, Slab\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n * BSD 3-Clause \"New\" or \"Revised\" License\n *\n * Extends the original version from https://github.com/quilljs/quill\n * Relevant parts converted from TypeScript to JavaScript\n */\n\nimport CodeBlock from \"quill/formats/code\";\nimport { matchNewline, matchBreak, deltaEndsWith, traverse } from \"src/decidim/editor/clipboard_utilities\";\n\nconst Delta = Quill.import(\"delta\");\nconst Clipboard = Quill.import(\"modules/clipboard\");\n\n/**\n * Pasting bold text is broken in Quill as described at:\n * https://github.com/quilljs/quill/issues/306\n *\n * The reason is that the `<strong>` nodes are not recognized as bold types.\n * This override fixes the issue by introducing parts of the newer Quill code\n * at GitHub and defining the `<strong>` tags as bold tags.\n */\nexport default class ClipboardOverride extends Clipboard {\n  constructor(quill, options) {\n    super(quill, options);\n    this.overrideMatcher(\"b\", \"b, strong\");\n    this.overrideMatcher(\"br\", \"br\", matchBreak);\n\n    // Change the matchNewLine matchers to the newer version\n    this.matchers[1][1] = matchNewline;\n    this.matchers[3][1] = matchNewline;\n\n    // Remove `matchSpacing` as that is also removed in the newer versions.\n    this.removeMatcher(Node.ELEMENT_NODE, \"matchSpacing\");\n  }\n\n  overrideMatcher(originalSelector, newSelector, newMatcher = null) {\n    const idx = this.matchers.findIndex((item) => item[0] === originalSelector);\n    if (idx >= 0) {\n      this.matchers[idx][0] = newSelector;\n      if (newMatcher) {\n        this.matchers[idx][1] = newMatcher;\n      }\n    }\n  }\n\n  removeMatcher(selector, matcherName) {\n    const idx = this.matchers.findIndex((item) => item[0] === selector && item[1].name === matcherName);\n    if (idx >= 0) {\n      this.matchers.splice(idx, 1);\n    }\n  }\n\n  onPaste(ev) {\n    if (ev.defaultPrevented || !this.quill.isEnabled()) {\n      return;\n    }\n    ev.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range === null) {\n      return;\n    }\n    const html = ev.clipboardData.getData(\"text/html\");\n    const text = ev.clipboardData.getData(\"text/plain\");\n    const files = Array.from(ev.clipboardData.files || []);\n    if (!html && files.length > 0) {\n      if (typeof this.quill.uploader !== \"undefined\") {\n        this.quill.uploader.upload(range, files);\n      }\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, \"text/html\");\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild.tagName === \"IMG\"\n      ) {\n        if (typeof this.quill.uploader !== \"undefined\") {\n          this.quill.uploader.upload(range, files);\n        }\n        return;\n      }\n    }\n    this.onPasteRange(range, { html, text });\n  }\n\n  onPasteRange(range, { text, html }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convertPaste({ text, html }, formats);\n    // debug.log('onPaste\", pastedDelta, { text, html });\n    const delta = new Delta().retain(range.index).delete(range.length).concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollIntoView();\n  }\n\n  convertPaste({ html, text }, formats = {}) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text, {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName]\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || \"\");\n    }\n    const delta = this.convertPasteHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, \"\\n\") &&\n      (delta.ops[delta.ops.length - 1].attributes === null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  convertPasteHTML(html) {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches\n    );\n  }\n}\n\n// Disable warning messages from overwritting modules\nQuill.debug(\"error\");\nQuill.register({\"modules/clipboard\": ClipboardOverride}, true);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}