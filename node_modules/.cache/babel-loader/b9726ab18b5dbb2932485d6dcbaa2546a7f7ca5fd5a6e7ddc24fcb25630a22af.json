{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/* eslint-disable require-jsdoc */\n\nimport attributeDiff from \"src/decidim/editor/attribute_diff\";\nvar Delta = Quill[\"import\"](\"delta\");\nvar previousChar = function previousChar(quill, range) {\n  return quill.getText(range.index - 1, 1);\n};\nvar beforePreviousChar = function beforePreviousChar(quill, range) {\n  return quill.getText(range.index - 2, 1);\n};\nvar nextChar = function nextChar(quill, range) {\n  return quill.getText(range.index, 1);\n};\nvar handleListSelection = function handleListSelection(quill, range) {\n  var lastCharacterOfPreviousLine = quill.getText(range.index - 3, 1);\n  if (nextChar(quill, range) === \"\\n\" || lastCharacterOfPreviousLine !== \"\\n\") {\n    quill.setSelection(range.index - 1, Quill.sources.SILENT);\n  } else {\n    quill.setSelection(range.index - 3, Quill.sources.SILENT);\n  }\n};\nvar moveSelectionToPreviousLine = function moveSelectionToPreviousLine(quill, range) {\n  var lastCharacterOfPreviousLine = quill.getText(range.index - 3, 1);\n  if (nextChar(quill, range) === \"\\n\" || lastCharacterOfPreviousLine !== \"\\n\") {\n    quill.setSelection(range.index - 1, Quill.sources.SILENT);\n  } else {\n    quill.setSelection(range.index - 3, Quill.sources.SILENT);\n  }\n};\nexport default function backspaceBindings(quill) {\n  quill.keyboard.addBinding({\n    key: 8,\n    offset: 1,\n    collapsed: true\n  }, function (range, context) {\n    var length = 1;\n    if (/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)) {\n      length = 2;\n    }\n    if (range.index === 0 || quill.getLength() <= 1) {\n      return;\n    }\n    var formats = {};\n    var _quill$getLine = quill.getLine(range.index),\n      _quill$getLine2 = _slicedToArray(_quill$getLine, 1),\n      line = _quill$getLine2[0];\n    var delta = new Delta().retain(range.index - length)[\"delete\"](length);\n    if (context.offset === 1 && previousChar(quill, range) === \"\\n\") {\n      var _quill$getLine3 = quill.getLine(range.index - 2),\n        _quill$getLine4 = _slicedToArray(_quill$getLine3, 1),\n        prev = _quill$getLine4[0];\n      if (prev && prev.statics.blotName === \"list-item\") {\n        formats = handleListSelection(quill, range);\n        if (prev !== null && prev.length() > 1) {\n          var curFormats = line.formats();\n          var prevFormats = quill.getFormat(range.index - 2, 1);\n          formats = attributeDiff(curFormats, prevFormats) || {};\n          length += 1;\n        }\n        delta = new Delta().retain(range.index - 2)[\"delete\"](2);\n        moveSelectionToPreviousLine(quill, range);\n      } else {\n        delta = new Delta().retain(range.index - 1)[\"delete\"](1);\n        if (range.index < 2) {\n          delta = new Delta()[\"delete\"](1).retain(range.index + line.length() - 1);\n        } else if (previousChar(quill, range) === \"\\n\" && beforePreviousChar(quill, range) === \"\\n\") {\n          delta = new Delta().retain(range.index - 2)[\"delete\"](2);\n        }\n      }\n    } else {\n      var _quill$getLine5 = quill.getLine(range.index - 1),\n        _quill$getLine6 = _slicedToArray(_quill$getLine5, 1),\n        _prev = _quill$getLine6[0];\n      if (_prev) {\n        var isPrevLineEmpty = _prev.statics.blotName === \"block\" && _prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          var _curFormats = line.formats();\n          var _prevFormats = quill.getFormat(range.index - 1, 1);\n          formats = attributeDiff(_curFormats, _prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            var formatDelta = new Delta().retain(range.index + line.length() - 2).retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    quill.updateContents(delta, Quill.sources.USER);\n    if (Object.keys(formats).length > 0) {\n      quill.formatLine(range.index - length, length, formats, Quill.sources.USER);\n    }\n    quill.focus();\n  });\n\n  // Put this backspace binding to second\n  quill.keyboard.bindings[8].splice(1, 0, quill.keyboard.bindings[8].pop());\n}","map":{"version":3,"names":["attributeDiff","Delta","Quill","previousChar","quill","range","getText","index","beforePreviousChar","nextChar","handleListSelection","lastCharacterOfPreviousLine","setSelection","sources","SILENT","moveSelectionToPreviousLine","backspaceBindings","keyboard","addBinding","key","offset","collapsed","context","length","test","prefix","getLength","formats","_quill$getLine","getLine","_quill$getLine2","_slicedToArray","line","delta","retain","_quill$getLine3","_quill$getLine4","prev","statics","blotName","curFormats","prevFormats","getFormat","_quill$getLine5","_quill$getLine6","_prev","isPrevLineEmpty","_curFormats","_prevFormats","Object","keys","formatDelta","compose","updateContents","USER","formatLine","focus","bindings","splice","pop"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/editor/modified_backspace_offset1.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nimport attributeDiff from \"src/decidim/editor/attribute_diff\"\n\nconst Delta = Quill.import(\"delta\");\n\nconst previousChar = (quill, range) => {\n  return quill.getText(range.index - 1, 1);\n}\n\nconst beforePreviousChar = (quill, range) => {\n  return quill.getText(range.index - 2, 1);\n}\n\nconst nextChar = (quill, range) => {\n  return quill.getText(range.index, 1);\n}\n\nconst handleListSelection = (quill, range) => {\n  const lastCharacterOfPreviousLine = quill.getText(range.index - 3, 1);\n  if (nextChar(quill, range) === \"\\n\" || lastCharacterOfPreviousLine !== \"\\n\") {\n    quill.setSelection(range.index - 1, Quill.sources.SILENT);\n  } else {\n    quill.setSelection(range.index - 3, Quill.sources.SILENT);\n  }\n}\n\nconst moveSelectionToPreviousLine = (quill, range) => {\n  const lastCharacterOfPreviousLine = quill.getText(range.index - 3, 1);\n  if (nextChar(quill, range) === \"\\n\" || lastCharacterOfPreviousLine !== \"\\n\") {\n    quill.setSelection(range.index - 1, Quill.sources.SILENT);\n  } else {\n    quill.setSelection(range.index - 3, Quill.sources.SILENT);\n  }\n}\n\nexport default function backspaceBindings(quill) {\n  quill.keyboard.addBinding({ key: 8, offset: 1, collapsed: true }, (range, context) => {\n    let length = 1\n    if ((/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/).test(context.prefix)) {\n      length = 2;\n    }\n\n    if (range.index === 0 || quill.getLength() <= 1) {\n      return;\n    }\n    let formats = {};\n    const [line] = quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 1 && previousChar(quill, range) === \"\\n\") {\n      const [prev] = quill.getLine(range.index - 2);\n      if (prev && prev.statics.blotName === \"list-item\") {\n        formats = handleListSelection(quill, range);\n        if (prev !== null && prev.length() > 1) {\n          let curFormats = line.formats();\n          let prevFormats = quill.getFormat(range.index - 2, 1);\n          formats = attributeDiff(curFormats, prevFormats) || {};\n          length += 1;\n        }\n        delta = new Delta().retain(range.index - 2).delete(2);\n        moveSelectionToPreviousLine(quill, range);\n      } else {\n        delta = new Delta().retain(range.index - 1).delete(1);\n        if (range.index < 2) {\n          delta = new Delta().delete(1).retain(range.index + line.length() - 1);\n        } else if (previousChar(quill, range) === \"\\n\" && beforePreviousChar(quill, range) === \"\\n\") {\n          delta = new Delta().retain(range.index - 2).delete(2);\n        }\n      }\n    } else {\n      const [prev] = quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === \"block\" && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          const curFormats = line.formats();\n          const prevFormats = quill.getFormat(range.index - 1, 1);\n          formats = attributeDiff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta().retain(range.index + line.length() - 2).retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    quill.updateContents(delta, Quill.sources.USER);\n    if (Object.keys(formats).length > 0) {\n      quill.formatLine(range.index - length, length, formats, Quill.sources.USER);\n    }\n    quill.focus();\n  });\n\n  // Put this backspace binding to second\n  quill.keyboard.bindings[8].splice(1, 0, quill.keyboard.bindings[8].pop());\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}