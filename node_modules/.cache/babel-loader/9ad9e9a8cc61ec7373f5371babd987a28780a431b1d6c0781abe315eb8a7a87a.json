{"ast":null,"code":"import \"src/decidim/geocoding\";\nimport formatAddress from \"src/decidim/geocoding/format_address\";\n\n/**\n * For the available address format keys, refer to:\n * https://developer.here.com/documentation/geocoder-autocomplete/dev_guide/topics/resource-type-response-suggest.html\n */\n$(function () {\n  var generateAddressLabel = formatAddress;\n  $(\"[data-decidim-geocoding]\").each(function (_i, el) {\n    var $input = $(el);\n    var config = $input.data(\"decidim-geocoding\");\n    var queryMinLength = config.queryMinLength || 2;\n    var addressFormat = config.addressFormat || [[\"street\", \"houseNumber\"], \"district\", \"city\", \"county\", \"state\", \"country\"];\n    var language = $(\"html\").attr(\"lang\");\n    var currentSuggestionQuery = null;\n    if (!config.apiKey || config.apiKey.length < 1) {\n      return;\n    }\n    $input.on(\"geocoder-suggest.decidim\", function (_ev, query, callback) {\n      clearTimeout(currentSuggestionQuery);\n\n      // Do not trigger API calls on short queries\n      if (\"\".concat(query).trim().length < queryMinLength) {\n        return;\n      }\n      currentSuggestionQuery = setTimeout(function () {\n        $.ajax({\n          method: \"GET\",\n          url: \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json\",\n          data: {\n            apiKey: config.apiKey,\n            query: query,\n            language: language\n          },\n          dataType: \"json\"\n        }).done(function (resp) {\n          if (resp.suggestions) {\n            return callback(resp.suggestions.map(function (item) {\n              var label = generateAddressLabel(item.address, addressFormat);\n              return {\n                key: label,\n                value: label,\n                locationId: item.locationId\n              };\n            }));\n          }\n          return null;\n        });\n      }, 200);\n    });\n    $input.on(\"geocoder-suggest-select.decidim\", function (_ev, selectedItem) {\n      $.ajax({\n        method: \"GET\",\n        url: \"https://geocoder.ls.hereapi.com/6.2/geocode.json\",\n        data: {\n          apiKey: config.apiKey,\n          gen: 9,\n          jsonattributes: 1,\n          locationid: selectedItem.locationId\n        },\n        dataType: \"json\"\n      }).done(function (resp) {\n        if (!resp.response || !Array.isArray(resp.response.view) || resp.response.view.length < 1) {\n          return;\n        }\n        var view = resp.response.view[0];\n        if (!Array.isArray(view.result) || view.result.length < 1) {\n          return;\n        }\n        var result = view.result[0];\n        var coordinates = [result.location.displayPosition.latitude, result.location.displayPosition.longitude];\n        $input.trigger(\"geocoder-suggest-coordinates.decidim\", [coordinates]);\n      });\n    });\n  });\n});","map":{"version":3,"names":["formatAddress","$","generateAddressLabel","each","_i","el","$input","config","data","queryMinLength","addressFormat","language","attr","currentSuggestionQuery","apiKey","length","on","_ev","query","callback","clearTimeout","concat","trim","setTimeout","ajax","method","url","dataType","done","resp","suggestions","map","item","label","address","key","value","locationId","selectedItem","gen","jsonattributes","locationid","response","Array","isArray","view","result","coordinates","location","displayPosition","latitude","longitude","trigger"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/geocoding/provider/here.js"],"sourcesContent":["import \"src/decidim/geocoding\"\nimport formatAddress from \"src/decidim/geocoding/format_address\"\n\n/**\n * For the available address format keys, refer to:\n * https://developer.here.com/documentation/geocoder-autocomplete/dev_guide/topics/resource-type-response-suggest.html\n */\n$(() => {\n  const generateAddressLabel = formatAddress;\n\n  $(\"[data-decidim-geocoding]\").each((_i, el) => {\n    const $input = $(el);\n    const config = $input.data(\"decidim-geocoding\");\n    const queryMinLength = config.queryMinLength || 2;\n    const addressFormat = config.addressFormat || [\n      [\"street\", \"houseNumber\"],\n      \"district\",\n      \"city\",\n      \"county\",\n      \"state\",\n      \"country\"\n    ];\n    const language = $(\"html\").attr(\"lang\");\n    let currentSuggestionQuery = null;\n\n    if (!config.apiKey || config.apiKey.length < 1) {\n      return;\n    }\n\n    $input.on(\"geocoder-suggest.decidim\", (_ev, query, callback) => {\n      clearTimeout(currentSuggestionQuery);\n\n      // Do not trigger API calls on short queries\n      if (`${query}`.trim().length < queryMinLength) {\n        return;\n      }\n\n      currentSuggestionQuery = setTimeout(() => {\n        $.ajax({\n          method: \"GET\",\n          url: \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json\",\n          data: {\n            apiKey: config.apiKey,\n            query: query,\n            language: language\n          },\n          dataType: \"json\"\n        }).done((resp) => {\n          if (resp.suggestions) {\n            return callback(resp.suggestions.map((item) => {\n              const label = generateAddressLabel(item.address, addressFormat);\n\n              return {\n                key: label,\n                value: label,\n                locationId: item.locationId\n              }\n            }));\n          }\n          return null;\n        });\n      }, 200);\n    });\n\n    $input.on(\"geocoder-suggest-select.decidim\", (_ev, selectedItem) => {\n      $.ajax({\n        method: \"GET\",\n        url: \"https://geocoder.ls.hereapi.com/6.2/geocode.json\",\n        data: {\n          apiKey: config.apiKey,\n          gen: 9,\n          jsonattributes: 1,\n          locationid: selectedItem.locationId\n        },\n        dataType: \"json\"\n      }).done((resp) => {\n        if (!resp.response || !Array.isArray(resp.response.view) ||\n          resp.response.view.length < 1\n        ) {\n          return;\n        }\n\n        const view = resp.response.view[0];\n        if (!Array.isArray(view.result) || view.result.length < 1) {\n          return;\n        }\n\n        const result = view.result[0];\n        const coordinates = [\n          result.location.displayPosition.latitude,\n          result.location.displayPosition.longitude\n        ];\n\n        $input.trigger(\n          \"geocoder-suggest-coordinates.decidim\",\n          [coordinates]\n        );\n      });\n    });\n  })\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}