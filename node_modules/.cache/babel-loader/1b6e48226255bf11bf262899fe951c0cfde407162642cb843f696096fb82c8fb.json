{"ast":null,"code":"/* eslint prefer-reflect: 0 */\n\n// Leaflet-SVGIcon\n// SVG icon for any marker class\n//\n// Copyright (c) 2016 University of New Hampshire - The MIT License\n// Author: Ilya Atkin <ilya.atkin@unh.edu>\n// Originally copied from https://github.com/iatkin/leaflet-svgicon\n//\n\nvar SVGIcon = L.DivIcon.extend({\n  options: {\n    \"circleText\": \"\",\n    \"className\": \"svg-icon\",\n    // defaults to [iconSize.x/2, iconSize.x/2]\n    \"circleAnchor\": null,\n    // defaults to color\n    \"circleColor\": null,\n    // defaults to opacity\n    \"circleOpacity\": null,\n    \"circleFillColor\": \"rgb(255,255,255)\",\n    // default to opacity\n    \"circleFillOpacity\": null,\n    \"circleRatio\": 0.5,\n    // defaults to weight\n    \"circleWeight\": null,\n    \"color\": \"rgb(0,102,255)\",\n    // defaults to color\n    \"fillColor\": null,\n    \"fillOpacity\": 0.4,\n    \"fontColor\": \"rgb(0, 0, 0)\",\n    \"fontOpacity\": \"1\",\n    // defaults to iconSize.x/4\n    \"fontSize\": null,\n    \"fontWeight\": \"normal\",\n    // defaults to [iconSize.x/2, iconSize.y] (point tip)\n    \"iconAnchor\": null,\n    \"iconSize\": L.point(32, 48),\n    \"opacity\": 1,\n    \"popupAnchor\": null,\n    \"shadowAngle\": 45,\n    \"shadowBlur\": 1,\n    \"shadowColor\": \"rgb(0,0,10)\",\n    \"shadowEnable\": false,\n    \"shadowLength\": 0.75,\n    \"shadowOpacity\": 0.5,\n    \"shadowTranslate\": L.point(0, 0),\n    \"weight\": 2\n  },\n  initialize: function initialize(_options) {\n    var options = L.Util.setOptions(this, _options);\n\n    // iconSize needs to be converted to a Point object if it is not passed as one\n    options.iconSize = L.point(options.iconSize);\n\n    // in addition to setting option dependant defaults, Point-based options are converted to Point objects\n    if (options.circleAnchor) {\n      options.circleAnchor = L.point(options.circleAnchor);\n    } else {\n      options.circleAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.x) / 2);\n    }\n    if (!options.circleColor) {\n      options.circleColor = options.color;\n    }\n    if (!options.circleFillOpacity) {\n      options.circleFillOpacity = options.opacity;\n    }\n    if (!options.circleOpacity) {\n      options.circleOpacity = options.opacity;\n    }\n    if (!options.circleWeight) {\n      options.circleWeight = options.weight;\n    }\n    if (!options.fillColor) {\n      options.fillColor = options.color;\n    }\n    if (!options.fontSize) {\n      options.fontSize = Number(options.iconSize.x / 4);\n    }\n    if (options.iconAnchor) {\n      options.iconAnchor = L.point(options.iconAnchor);\n    } else {\n      options.iconAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.y));\n    }\n    if (options.popupAnchor) {\n      options.popupAnchor = L.point(options.popupAnchor);\n    } else {\n      options.popupAnchor = L.point(0, -0.75 * options.iconSize.y);\n    }\n    options.html = this._createSVG();\n  },\n  _createCircle: function _createCircle() {\n    var cx = Number(this.options.circleAnchor.x);\n    var cy = Number(this.options.circleAnchor.y);\n    var radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio);\n    var fill = this.options.circleFillColor;\n    var fillOpacity = this.options.circleFillOpacity;\n    var stroke = this.options.circleColor;\n    var strokeOpacity = this.options.circleOpacity;\n    var strokeWidth = this.options.circleWeight;\n    var className = \"\".concat(this.options.className, \"-circle\");\n    var circle = \"<circle class=\\\"\".concat(className, \"\\\" cx=\\\"\").concat(cx, \"\\\" cy=\\\"\").concat(cy, \"\\\" r=\\\"\").concat(radius, \"\\\" fill=\\\"\").concat(fill, \"\\\" fill-opacity=\\\"\").concat(fillOpacity, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" stroke-opacity=\").concat(strokeOpacity, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\"/>\");\n    return circle;\n  },\n  _createPathDescription: function _createPathDescription() {\n    var height = Number(this.options.iconSize.y);\n    var width = Number(this.options.iconSize.x);\n    var weight = Number(this.options.weight);\n    var margin = weight / 2;\n    var startPoint = \"M \".concat(margin, \" \").concat(width / 2, \" \");\n    var leftLine = \"L \".concat(width / 2, \" \").concat(height - weight, \" \");\n    var rightLine = \"L \".concat(width - margin, \" \").concat(width / 2, \" \");\n    var arc = \"A \".concat(width / 4, \" \").concat(width / 4, \" 0 0 0 \").concat(margin, \" \").concat(width / 2, \" Z\");\n    var description = startPoint + leftLine + rightLine + arc;\n    return description;\n  },\n  _createPath: function _createPath() {\n    var pathDescription = this._createPathDescription();\n    var strokeWidth = this.options.weight;\n    var stroke = this.options.color;\n    var strokeOpacity = this.options.opacity;\n    var fill = this.options.fillColor;\n    var fillOpacity = this.options.fillOpacity;\n    var className = \"\".concat(this.options.className, \"-path\");\n    var path = \"<path class=\\\"\".concat(className, \"\\\" d=\\\"\").concat(pathDescription, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" stroke-opacity=\\\"\").concat(strokeOpacity, \"\\\" fill=\\\"\").concat(fill, \"\\\" fill-opacity=\\\"\").concat(fillOpacity, \"\\\"/>\");\n    return path;\n  },\n  _createShadow: function _createShadow() {\n    var pathDescription = this._createPathDescription();\n    var strokeWidth = this.options.weight;\n    var stroke = this.options.shadowColor;\n    var fill = this.options.shadowColor;\n    var className = \"\".concat(this.options.className, \"-shadow\");\n    var origin = \"\".concat(this.options.iconSize.x / 2, \"px \").concat(this.options.iconSize.y, \"px\");\n    var rotation = this.options.shadowAngle;\n    var height = this.options.shadowLength;\n    var opacity = this.options.shadowOpacity;\n    var blur = this.options.shadowBlur;\n    var translate = \"\".concat(this.options.shadowTranslate.x, \"px, \").concat(this.options.shadowTranslate.y, \"px\");\n    var blurFilter = \"<filter id='iconShadowBlur'><feGaussianBlur in='SourceGraphic' stdDeviation='\".concat(blur, \"'/></filter>\");\n    var shadow = \"<path filter=\\\"url(#iconShadowBlur\\\") class=\\\"\".concat(className, \"\\\" d=\\\"\").concat(pathDescription, \"\\\" fill=\\\"\").concat(fill, \"\\\" stroke-width=\\\"\").concat(strokeWidth, \"\\\" stroke=\\\"\").concat(stroke, \"\\\" style=\\\"opacity: \").concat(opacity, \"; transform-origin: \").concat(origin, \"; transform: rotate(\").concat(rotation, \"deg) translate(\").concat(translate, \") scale(1, \").concat(height, \")\\\" />\");\n    return blurFilter + shadow;\n  },\n  _createSVG: function _createSVG() {\n    var path = this._createPath();\n    var circle = this._createCircle();\n    var text = this._createText();\n    var shadow = \"\";\n    if (this.options.shadowEnable) {\n      shadow = this._createShadow();\n    }\n    var className = \"\".concat(this.options.className, \"-svg\");\n    var width = this.options.iconSize.x;\n    var height = this.options.iconSize.y;\n    if (this.options.shadowEnable) {\n      width += this.options.iconSize.y * this.options.shadowLength - this.options.iconSize.x / 2;\n      width = Math.max(width, 32);\n      height += this.options.iconSize.y * this.options.shadowLength;\n    }\n    var style = \"width:\".concat(width, \"px; height:\").concat(height);\n    var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" class=\\\"\".concat(className, \"\\\" style=\\\"\").concat(style, \"\\\">\").concat(shadow).concat(path).concat(circle).concat(text, \"</svg>\");\n    return svg;\n  },\n  _createText: function _createText() {\n    var fontSize = \"\".concat(this.options.fontSize, \"px\");\n    var fontWeight = this.options.fontWeight;\n    var lineHeight = Number(this.options.fontSize);\n    var coordX = this.options.circleAnchor.x;\n    // 35% was found experimentally\n    var coordY = this.options.circleAnchor.y + lineHeight * 0.35;\n    var circleText = this.options.circleText;\n    var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\".concat(this.options.fontOpacity, \")\"));\n    var text = \"<text text-anchor=\\\"middle\\\" x=\\\"\".concat(coordX, \"\\\" y=\\\"\").concat(coordY, \"\\\" style=\\\"font-size: \").concat(fontSize, \"; font-weight: \").concat(fontWeight, \"\\\" fill=\\\"\").concat(textColor, \"\\\">\").concat(circleText, \"</text>\");\n    return text;\n  }\n});\nvar SVGMarker = L.Marker.extend({\n  options: {\n    \"iconFactory\": L.divIcon.svgIcon,\n    \"iconOptions\": {}\n  },\n  initialize: function initialize(latlng, _options) {\n    var options = L.Util.setOptions(this, _options);\n    options.icon = options.iconFactory(options.iconOptions);\n    this._latlng = latlng;\n  },\n  onAdd: function onAdd(map) {\n    L.Marker.prototype.onAdd.call(this, map);\n  },\n  setStyle: function setStyle(style) {\n    if (this._icon) {\n      //      let svg = this._icon.children[0]\n      var iconBody = this._icon.children[0].children[0];\n      var iconCircle = this._icon.children[0].children[1];\n      if (style.color && !style.iconOptions) {\n        var stroke = style.color.replace(\"rgb\", \"rgba\").replace(\")\", \",\".concat(this.options.icon.options.opacity, \")\"));\n        var fill = style.color.replace(\"rgb\", \"rgba\").replace(\")\", \",\".concat(this.options.icon.options.fillOpacity, \")\"));\n        iconBody.setAttribute(\"stroke\", stroke);\n        iconBody.setAttribute(\"fill\", fill);\n        iconCircle.setAttribute(\"stroke\", stroke);\n        this.options.icon.fillColor = fill;\n        this.options.icon.color = stroke;\n        this.options.icon.circleColor = stroke;\n      }\n      if (style.opacity) {\n        this.setOpacity(style.opacity);\n      }\n      if (style.iconOptions) {\n        if (style.color) {\n          style.iconOptions.color = style.color;\n        }\n        var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions);\n        this.setIcon(L.divIcon.svgIcon(iconOptions));\n      }\n    }\n  }\n});\nexport { SVGMarker, SVGIcon };","map":{"version":3,"names":["SVGIcon","L","DivIcon","extend","options","point","initialize","_options","Util","setOptions","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","concat","circle","_createPathDescription","height","width","margin","startPoint","leftLine","rightLine","arc","description","_createPath","pathDescription","path","_createShadow","shadowColor","origin","rotation","shadowAngle","shadowLength","shadowOpacity","blur","shadowBlur","translate","shadowTranslate","blurFilter","shadow","text","_createText","shadowEnable","Math","max","style","svg","fontWeight","lineHeight","coordX","coordY","circleText","textColor","fontColor","replace","fontOpacity","SVGMarker","Marker","divIcon","svgIcon","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","_icon","iconBody","children","iconCircle","setAttribute","setOpacity","setIcon"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/map/svg-icon.js"],"sourcesContent":["/* eslint prefer-reflect: 0 */\n\n// Leaflet-SVGIcon\n// SVG icon for any marker class\n//\n// Copyright (c) 2016 University of New Hampshire - The MIT License\n// Author: Ilya Atkin <ilya.atkin@unh.edu>\n// Originally copied from https://github.com/iatkin/leaflet-svgicon\n//\n\nlet SVGIcon = L.DivIcon.extend({\n  options: {\n    \"circleText\": \"\",\n    \"className\": \"svg-icon\",\n    // defaults to [iconSize.x/2, iconSize.x/2]\n    \"circleAnchor\": null,\n    // defaults to color\n    \"circleColor\": null,\n    // defaults to opacity\n    \"circleOpacity\": null,\n    \"circleFillColor\": \"rgb(255,255,255)\",\n    // default to opacity\n    \"circleFillOpacity\": null,\n    \"circleRatio\": 0.5,\n    // defaults to weight\n    \"circleWeight\": null,\n    \"color\": \"rgb(0,102,255)\",\n    // defaults to color\n    \"fillColor\": null,\n    \"fillOpacity\": 0.4,\n    \"fontColor\": \"rgb(0, 0, 0)\",\n    \"fontOpacity\": \"1\",\n    // defaults to iconSize.x/4\n    \"fontSize\": null,\n    \"fontWeight\": \"normal\",\n    // defaults to [iconSize.x/2, iconSize.y] (point tip)\n    \"iconAnchor\": null,\n    \"iconSize\": L.point(32, 48),\n    \"opacity\": 1,\n    \"popupAnchor\": null,\n    \"shadowAngle\": 45,\n    \"shadowBlur\": 1,\n    \"shadowColor\": \"rgb(0,0,10)\",\n    \"shadowEnable\": false,\n    \"shadowLength\": 0.75,\n    \"shadowOpacity\": 0.5,\n    \"shadowTranslate\": L.point(0, 0),\n    \"weight\": 2\n  },\n  initialize: function(_options) {\n    let options = L.Util.setOptions(this, _options)\n\n    // iconSize needs to be converted to a Point object if it is not passed as one\n    options.iconSize = L.point(options.iconSize)\n\n    // in addition to setting option dependant defaults, Point-based options are converted to Point objects\n    if (options.circleAnchor) {\n      options.circleAnchor = L.point(options.circleAnchor)\n    } else {\n      options.circleAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.x) / 2)\n    }\n    if (!options.circleColor) {\n      options.circleColor = options.color\n    }\n    if (!options.circleFillOpacity) {\n      options.circleFillOpacity = options.opacity\n    }\n    if (!options.circleOpacity) {\n      options.circleOpacity = options.opacity\n    }\n    if (!options.circleWeight) {\n      options.circleWeight = options.weight\n    }\n    if (!options.fillColor) {\n      options.fillColor = options.color\n    }\n    if (!options.fontSize) {\n      options.fontSize = Number(options.iconSize.x / 4)\n    }\n    if (options.iconAnchor) {\n      options.iconAnchor = L.point(options.iconAnchor)\n    }\n    else {\n      options.iconAnchor = L.point(Number(options.iconSize.x) / 2, Number(options.iconSize.y))\n    }\n    if (options.popupAnchor) {\n      options.popupAnchor = L.point(options.popupAnchor)\n    }\n    else {\n      options.popupAnchor = L.point(0, (-0.75) * (options.iconSize.y))\n    }\n\n    options.html = this._createSVG()\n  },\n  _createCircle: function() {\n    let cx = Number(this.options.circleAnchor.x)\n    let cy = Number(this.options.circleAnchor.y)\n    let radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio)\n    let fill = this.options.circleFillColor\n    let fillOpacity = this.options.circleFillOpacity\n    let stroke = this.options.circleColor\n    let strokeOpacity = this.options.circleOpacity\n    let strokeWidth = this.options.circleWeight\n    let className = `${this.options.className}-circle`\n\n    let circle = `<circle class=\"${className}\" cx=\"${cx}\" cy=\"${cy}\" r=\"${radius\n    }\" fill=\"${fill}\" fill-opacity=\"${fillOpacity\n    }\" stroke=\"${stroke}\" stroke-opacity=${strokeOpacity}\" stroke-width=\"${strokeWidth}\"/>`\n\n    return circle\n  },\n  _createPathDescription: function() {\n    let height = Number(this.options.iconSize.y)\n    let width = Number(this.options.iconSize.x)\n    let weight = Number(this.options.weight)\n    let margin = weight / 2\n\n    let startPoint = `M ${margin} ${width / 2} `\n    let leftLine = `L ${width / 2} ${height - weight} `\n    let rightLine = `L ${width - margin} ${width / 2} `\n    let arc = `A ${width / 4} ${width / 4} 0 0 0 ${margin} ${width / 2} Z`\n\n    let description = startPoint + leftLine + rightLine + arc\n\n    return description\n  },\n  _createPath: function() {\n    let pathDescription = this._createPathDescription()\n    let strokeWidth = this.options.weight\n    let stroke = this.options.color\n    let strokeOpacity = this.options.opacity\n    let fill = this.options.fillColor\n    let fillOpacity = this.options.fillOpacity\n    let className = `${this.options.className}-path`\n\n    let path = `<path class=\"${className}\" d=\"${pathDescription\n    }\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-opacity=\"${strokeOpacity\n    }\" fill=\"${fill}\" fill-opacity=\"${fillOpacity}\"/>`\n\n    return path\n  },\n  _createShadow: function() {\n    let pathDescription = this._createPathDescription()\n    let strokeWidth = this.options.weight\n    let stroke = this.options.shadowColor\n    let fill = this.options.shadowColor\n    let className = `${this.options.className}-shadow`\n\n    let origin = `${this.options.iconSize.x / 2}px ${this.options.iconSize.y}px`\n    let rotation = this.options.shadowAngle\n    let height = this.options.shadowLength\n    let opacity = this.options.shadowOpacity\n    let blur = this.options.shadowBlur\n    let translate = `${this.options.shadowTranslate.x}px, ${this.options.shadowTranslate.y}px`\n\n    let blurFilter = `<filter id='iconShadowBlur'><feGaussianBlur in='SourceGraphic' stdDeviation='${blur}'/></filter>`\n\n    let shadow = `<path filter=\"url(#iconShadowBlur\") class=\"${className}\" d=\"${pathDescription}\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" style=\"opacity: ${opacity}; transform-origin: ${origin}; transform: rotate(${rotation}deg) translate(${translate}) scale(1, ${height})\" />`\n\n    return blurFilter + shadow\n  },\n  _createSVG: function() {\n    let path = this._createPath()\n    let circle = this._createCircle()\n    let text = this._createText()\n    let shadow = \"\"\n    if (this.options.shadowEnable) {\n      shadow = this._createShadow()\n    }\n\n    let className = `${this.options.className}-svg`\n    let width = this.options.iconSize.x\n    let height = this.options.iconSize.y\n\n    if (this.options.shadowEnable) {\n      width += this.options.iconSize.y * this.options.shadowLength - (this.options.iconSize.x / 2)\n      width = Math.max(width, 32)\n      height += this.options.iconSize.y * this.options.shadowLength\n    }\n\n    let style = `width:${width}px; height:${height}`\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"${className}\" style=\"${style}\">${shadow}${path}${circle}${text}</svg>`\n\n    return svg\n  },\n  _createText: function() {\n    let fontSize = `${this.options.fontSize}px`\n    let fontWeight = this.options.fontWeight\n    let lineHeight = Number(this.options.fontSize)\n\n    let coordX = this.options.circleAnchor.x\n    // 35% was found experimentally\n    let coordY = this.options.circleAnchor.y + (lineHeight * 0.35)\n    let circleText = this.options.circleText\n    let textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", `,${this.options.fontOpacity})`)\n\n    let text = `<text text-anchor=\"middle\" x=\"${coordX}\" y=\"${coordY}\" style=\"font-size: ${fontSize}; font-weight: ${fontWeight}\" fill=\"${textColor}\">${circleText}</text>`\n\n    return text\n  }\n})\n\nlet SVGMarker = L.Marker.extend({\n  options: {\n    \"iconFactory\": L.divIcon.svgIcon,\n    \"iconOptions\": {}\n  },\n  initialize: function(latlng, _options) {\n    let options = L.Util.setOptions(this, _options)\n    options.icon = options.iconFactory(options.iconOptions)\n    this._latlng = latlng\n  },\n  onAdd: function(map) {\n    L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n    if (this._icon) {\n      //      let svg = this._icon.children[0]\n      let iconBody = this._icon.children[0].children[0]\n      let iconCircle = this._icon.children[0].children[1]\n\n      if (style.color && !style.iconOptions) {\n        let stroke = style.color.replace(\"rgb\", \"rgba\").replace(\")\", `,${this.options.icon.options.opacity})`)\n        let fill = style.color.replace(\"rgb\", \"rgba\").replace(\")\", `,${this.options.icon.options.fillOpacity})`)\n        iconBody.setAttribute(\"stroke\", stroke)\n        iconBody.setAttribute(\"fill\", fill)\n        iconCircle.setAttribute(\"stroke\", stroke)\n\n        this.options.icon.fillColor = fill\n        this.options.icon.color = stroke\n        this.options.icon.circleColor = stroke\n      }\n      if (style.opacity) {\n        this.setOpacity(style.opacity)\n      }\n      if (style.iconOptions) {\n        if (style.color) {\n          style.iconOptions.color = style.color\n        }\n        let iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n        this.setIcon(L.divIcon.svgIcon(iconOptions))\n      }\n    }\n  }\n});\n\nexport { SVGMarker, SVGIcon }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}