{"ast":null,"code":"/**\n * Makes the #select-identity-button to open a popup for the user to\n * select with which identity they want to perform an action.\n *\n */\n$(function () {\n  var button = $(\"#select-identity-button\"),\n    identitiesUrl = null,\n    userIdentitiesDialog = $(\"#user-identities\");\n  if (userIdentitiesDialog.length) {\n    identitiesUrl = userIdentitiesDialog.data(\"reveal-identities-url\");\n    button.click(function () {\n      $.ajax(identitiesUrl).done(function (response) {\n        userIdentitiesDialog.html(response).foundation(\"open\");\n        button.trigger(\"ajax:success\");\n      });\n    });\n  }\n});\n\n/**\n * Manage the identity selector for endorsements.\n *\n */\n$(function () {\n  $(\"#select-identity-button\").on(\"ajax:success\", function () {\n    // once reveal popup has been rendered register event callbacks\n    $(\"#user-identities ul.reveal__list li\").each(function (index, elem) {\n      var liTag = $(elem);\n      liTag.on(\"click\", function () {\n        var method = liTag.data(\"method\"),\n          urlDataAttr = null;\n        if (method === \"POST\") {\n          urlDataAttr = \"create_url\";\n        } else {\n          urlDataAttr = \"destroy_url\";\n        }\n        $.ajax({\n          url: liTag.data(urlDataAttr),\n          method: method,\n          dataType: \"script\",\n          success: function success() {\n            if (liTag.hasClass(\"selected\")) {\n              liTag.removeClass(\"selected\");\n              liTag.find(\".icon--circle-check\").addClass(\"invisible\");\n              liTag.data(\"method\", \"POST\");\n            } else {\n              liTag.addClass(\"selected\");\n              liTag.find(\".icon--circle-check\").removeClass(\"invisible\");\n              liTag.data(\"method\", \"DELETE\");\n            }\n          }\n        });\n      });\n    });\n  });\n});","map":{"version":3,"names":["$","button","identitiesUrl","userIdentitiesDialog","length","data","click","ajax","done","response","html","foundation","trigger","on","each","index","elem","liTag","method","urlDataAttr","url","dataType","success","hasClass","removeClass","find","addClass"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/identity_selector_dialog.js"],"sourcesContent":["/**\n * Makes the #select-identity-button to open a popup for the user to\n * select with which identity they want to perform an action.\n *\n */\n$(() => {\n  let button = $(\"#select-identity-button\"),\n      identitiesUrl = null,\n      userIdentitiesDialog = $(\"#user-identities\");\n\n  if (userIdentitiesDialog.length) {\n    identitiesUrl = userIdentitiesDialog.data(\"reveal-identities-url\");\n\n    button.click(function () {\n      $.ajax(identitiesUrl).done(function(response) {\n        userIdentitiesDialog.html(response).foundation(\"open\");\n        button.trigger(\"ajax:success\")\n      });\n    });\n  }\n});\n\n\n/**\n * Manage the identity selector for endorsements.\n *\n */\n$(() => {\n  $(\"#select-identity-button\").on(\"ajax:success\", function() {\n    // once reveal popup has been rendered register event callbacks\n    $(\"#user-identities ul.reveal__list li\").each(function(index, elem) {\n      let liTag = $(elem)\n      liTag.on(\"click\", function() {\n        let method = liTag.data(\"method\"),\n            urlDataAttr = null;\n        if (method === \"POST\") {\n          urlDataAttr = \"create_url\";\n        } else {\n          urlDataAttr = \"destroy_url\";\n        }\n        $.ajax({\n          url: liTag.data(urlDataAttr),\n          method: method,\n          dataType: \"script\",\n          success: function() {\n            if (liTag.hasClass(\"selected\")) {\n              liTag.removeClass(\"selected\")\n              liTag.find(\".icon--circle-check\").addClass(\"invisible\")\n              liTag.data(\"method\", \"POST\")\n            } else {\n              liTag.addClass(\"selected\")\n              liTag.find(\".icon--circle-check\").removeClass(\"invisible\")\n              liTag.data(\"method\", \"DELETE\")\n            }\n          }\n        })\n      })\n    });\n  });\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACAA,CAAC,CAAC,YAAM;EACN,IAAIC,MAAM,GAAGD,CAAC,CAAC,yBAAyB,CAAC;IACrCE,aAAa,GAAG,IAAI;IACpBC,oBAAoB,GAAGH,CAAC,CAAC,kBAAkB,CAAC;EAEhD,IAAIG,oBAAoB,CAACC,MAAM,EAAE;IAC/BF,aAAa,GAAGC,oBAAoB,CAACE,IAAI,CAAC,uBAAuB,CAAC;IAElEJ,MAAM,CAACK,KAAK,CAAC,YAAY;MACvBN,CAAC,CAACO,IAAI,CAACL,aAAa,CAAC,CAACM,IAAI,CAAC,UAASC,QAAQ,EAAE;QAC5CN,oBAAoB,CAACO,IAAI,CAACD,QAAQ,CAAC,CAACE,UAAU,CAAC,MAAM,CAAC;QACtDV,MAAM,CAACW,OAAO,CAAC,cAAc,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACAZ,CAAC,CAAC,YAAM;EACNA,CAAC,CAAC,yBAAyB,CAAC,CAACa,EAAE,CAAC,cAAc,EAAE,YAAW;IACzD;IACAb,CAAC,CAAC,qCAAqC,CAAC,CAACc,IAAI,CAAC,UAASC,KAAK,EAAEC,IAAI,EAAE;MAClE,IAAIC,KAAK,GAAGjB,CAAC,CAACgB,IAAI,CAAC;MACnBC,KAAK,CAACJ,EAAE,CAAC,OAAO,EAAE,YAAW;QAC3B,IAAIK,MAAM,GAAGD,KAAK,CAACZ,IAAI,CAAC,QAAQ,CAAC;UAC7Bc,WAAW,GAAG,IAAI;QACtB,IAAID,MAAM,KAAK,MAAM,EAAE;UACrBC,WAAW,GAAG,YAAY;QAC5B,CAAC,MAAM;UACLA,WAAW,GAAG,aAAa;QAC7B;QACAnB,CAAC,CAACO,IAAI,CAAC;UACLa,GAAG,EAAEH,KAAK,CAACZ,IAAI,CAACc,WAAW,CAAC;UAC5BD,MAAM,EAAEA,MAAM;UACdG,QAAQ,EAAE,QAAQ;UAClBC,OAAO,EAAE,SAAAA,QAAA,EAAW;YAClB,IAAIL,KAAK,CAACM,QAAQ,CAAC,UAAU,CAAC,EAAE;cAC9BN,KAAK,CAACO,WAAW,CAAC,UAAU,CAAC;cAC7BP,KAAK,CAACQ,IAAI,CAAC,qBAAqB,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC;cACvDT,KAAK,CAACZ,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;YAC9B,CAAC,MAAM;cACLY,KAAK,CAACS,QAAQ,CAAC,UAAU,CAAC;cAC1BT,KAAK,CAACQ,IAAI,CAAC,qBAAqB,CAAC,CAACD,WAAW,CAAC,WAAW,CAAC;cAC1DP,KAAK,CAACZ,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;YAChC;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}