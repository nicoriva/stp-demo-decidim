{"ast":null,"code":"import \"src/decidim/map/factory\";\n$(function () {\n  // Load the map controller factory method in the document.ready handler to\n  // allow overriding it by any script that is loaded before the document is\n  // ready.\n  var $mapElements = $(\"[data-decidim-map]\");\n  if ($mapElements.length < 1 && $(\"#map\").length > 0) {\n    throw new Error(\"DEPRECATION: Please update your maps customizations or include 'decidim/map/legacy.js' for legacy support!\");\n  }\n  $mapElements.each(function (_i, el) {\n    var $map = $(el);\n    var mapId = $map.attr(\"id\");\n    if (!mapId) {\n      mapId = \"map-\".concat(Math.random().toString(36).substr(2, 9));\n      $map.attr(\"id\", mapId);\n    }\n    var mapConfig = $map.data(\"decidim-map\");\n    var ctrl = window.Decidim.createMapController(mapId, mapConfig);\n    var map = ctrl.load();\n    $map.data(\"map\", map);\n    $map.data(\"map-controller\", ctrl);\n    $map.trigger(\"configure.decidim\", [map, mapConfig]);\n    ctrl.start();\n\n    // Indicates the map is loaded with the map objects initialized and ready\n    // to be used.\n    $map.trigger(\"ready.decidim\", [map, mapConfig]);\n  });\n});","map":{"version":3,"names":["$","$mapElements","length","Error","each","_i","el","$map","mapId","attr","concat","Math","random","toString","substr","mapConfig","data","ctrl","window","Decidim","createMapController","map","load","trigger","start"],"sources":["/home/nico/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.3/app/packs/src/decidim/map.js"],"sourcesContent":["import \"src/decidim/map/factory\"\n\n$(() => {\n  // Load the map controller factory method in the document.ready handler to\n  // allow overriding it by any script that is loaded before the document is\n  // ready.\n  let $mapElements = $(\"[data-decidim-map]\");\n  if ($mapElements.length < 1 && $(\"#map\").length > 0) {\n    throw new Error(\n      \"DEPRECATION: Please update your maps customizations or include 'decidim/map/legacy.js' for legacy support!\"\n    );\n  }\n\n  $mapElements.each((_i, el) => {\n    const $map = $(el);\n    let mapId = $map.attr(\"id\");\n    if (!mapId) {\n      mapId = `map-${Math.random().toString(36).substr(2, 9)}`;\n      $map.attr(\"id\", mapId);\n    }\n\n    const mapConfig = $map.data(\"decidim-map\");\n    const ctrl = window.Decidim.createMapController(mapId, mapConfig);\n    const map = ctrl.load();\n\n    $map.data(\"map\", map);\n    $map.data(\"map-controller\", ctrl);\n\n    $map.trigger(\"configure.decidim\", [map, mapConfig]);\n\n    ctrl.start();\n\n    // Indicates the map is loaded with the map objects initialized and ready\n    // to be used.\n    $map.trigger(\"ready.decidim\", [map, mapConfig]);\n  });\n});\n"],"mappings":"AAAA,OAAO,yBAAyB;AAEhCA,CAAC,CAAC,YAAM;EACN;EACA;EACA;EACA,IAAIC,YAAY,GAAGD,CAAC,CAAC,oBAAoB,CAAC;EAC1C,IAAIC,YAAY,CAACC,MAAM,GAAG,CAAC,IAAIF,CAAC,CAAC,MAAM,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;IACnD,MAAM,IAAIC,KAAK,CACb,4GACF,CAAC;EACH;EAEAF,YAAY,CAACG,IAAI,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAK;IAC5B,IAAMC,IAAI,GAAGP,CAAC,CAACM,EAAE,CAAC;IAClB,IAAIE,KAAK,GAAGD,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC;IAC3B,IAAI,CAACD,KAAK,EAAE;MACVA,KAAK,UAAAE,MAAA,CAAUC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;MACxDP,IAAI,CAACE,IAAI,CAAC,IAAI,EAAED,KAAK,CAAC;IACxB;IAEA,IAAMO,SAAS,GAAGR,IAAI,CAACS,IAAI,CAAC,aAAa,CAAC;IAC1C,IAAMC,IAAI,GAAGC,MAAM,CAACC,OAAO,CAACC,mBAAmB,CAACZ,KAAK,EAAEO,SAAS,CAAC;IACjE,IAAMM,GAAG,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAAC;IAEvBf,IAAI,CAACS,IAAI,CAAC,KAAK,EAAEK,GAAG,CAAC;IACrBd,IAAI,CAACS,IAAI,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IAEjCV,IAAI,CAACgB,OAAO,CAAC,mBAAmB,EAAE,CAACF,GAAG,EAAEN,SAAS,CAAC,CAAC;IAEnDE,IAAI,CAACO,KAAK,CAAC,CAAC;;IAEZ;IACA;IACAjB,IAAI,CAACgB,OAAO,CAAC,eAAe,EAAE,CAACF,GAAG,EAAEN,SAAS,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}